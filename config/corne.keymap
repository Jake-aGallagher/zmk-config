/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };
};

/ {
    behaviors {
        sym1: grave_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp CARET>;
            mods = <(MOD_RSFT)>;
        };
        sym2: dollar_pound {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOLLAR>, <&kp HASH>;
            mods = <(MOD_RSFT)>;
        };
        sym3: minus_under {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDER>;
            mods = <(MOD_RSFT)>;
        };
        sym4: equal_plus {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp PLUS>;
            mods = <(MOD_RSFT)>;
        };
        sym5: asterisk_percent {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp ASTRK>, <&kp PRCNT>;
            mods = <(MOD_RSFT)>;
        };
        sym6: less_greater {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LT>, <&kp GT>;
            mods = <(MOD_RSFT)>;
        };
        sym7: lbracket_rbracket {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp RBKT>;
            mods = <(MOD_RSFT)>;
        };
        sym8: lbrace_rbrace {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp RBRC>;
            mods = <(MOD_RSFT)>;
        };
        sym9: lpar_rpar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LPAR>, <&kp RPAR>;
            mods = <(MOD_RSFT)>;
        };
        sym10: fslash_bslash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp NUBS>;
            mods = <(MOD_RSFT)>;
        };
        sym11: colon_tilde {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp PIPE>;
            mods = <(MOD_RSFT)>;
        };
        sym12: ampersand_pipe {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp AMPS>, <&kp PIPE2>;
            mods = <(MOD_RSFT)>;
        };
        sym13: singlequote_doublequote {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp AT>;
            mods = <(MOD_RSFT)>;
        };
        sym14: exclamation_question {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp QMARK>;
            mods = <(MOD_RSFT)>;
        };
        sym15: at_hash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp BSLH>;
            mods = <(MOD_RSFT)>;
        };
        num1: 1_F1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&kp F1>;
            mods = <(MOD_RSFT)>;
        };
        num2: 2_F2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp F2>;
            mods = <(MOD_RSFT)>;
        };
        num3: 3_F3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&kp F3>;
            mods = <(MOD_RSFT)>;
        };
        num4: 4_F4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;
            mods = <(MOD_RSFT)>;
        };
        num5: 5_F5 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N5>, <&kp F5>;
            mods = <(MOD_RSFT)>;
        };
        num6: 6_F6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp F6>;
            mods = <(MOD_RSFT)>;
        };
        num7: 7_F7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp F7>;
            mods = <(MOD_RSFT)>;
        };
        num8: 8_F8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp F8>;
            mods = <(MOD_RSFT)>;
        };
        num9: 9_F9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp F9>;
            mods = <(MOD_RSFT)>;
        };
        num0: 0_F10 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp F10>;
            mods = <(MOD_RSFT)>;
        };
        num11: MINUS_F11 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp F11>;
            mods = <(MOD_RSFT)>;
        };
        num12: PLUS_F12 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PLUS>, <&kp F12>;
            mods = <(MOD_RSFT)>;
        };
        numPR: SLASH_PRINT {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp PRINTSCREEN>;
            mods = <(MOD_RSFT)>;
        };
    };
};

&mt {
    tapping-term-ms = <400>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &mt LGUI Q   &mt LALT W      &mt LSHFT F     &mt LCTRL P     &kp B                   &kp J           &mt RCTRL L     &mt RSHFT U     &mt RALT Y      &mt LGUI SEMI    
   &kp A        &kp R           &kp S           &kp T           &kp G                   &kp M           &kp N           &kp E           &kp I           &kp O 
   &kp Z        &kp X           &kp C           &kp D           &kp V                   &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH
                        &lt 3 ESC    &kp SPACE        &lt 4 TAB       &lt 2 ENTER        &kp BACKSPACE    &lt 1 DELETE
                        >;
                };

                number_layer {
                        bindings = <
   &num12   &num7    &num8       &num9      &kp ASTERISK            &none   &kp RCTRL       &kp RSHFT       &kp RALT        &kp RGUI
   &num11   &num4    &num5       &num6      &numPR                  &none   &none           &none           &none           &none
   &num0    &num1    &num2       &num3      &kp PERIOD              &none   &none           &none           &none           &none
                                                        &trans    &trans    &trans   &trans   &trans   &trans
                        >;
                };

                symbol_layer {
                        bindings = <
&sym1   &sym2   &sym3   &sym4   &sym5           &none   &kp RCTRL       &kp RSHFT       &kp RALT        &kp RGUI
&sym6   &sym7   &sym8   &sym9   &sym10          &none   &none           &none           &none           &none
&sym11  &sym12  &sym13  &sym14  &sym15          &none   &none           &none           &none           &none
                &trans    &trans    &trans   &trans   &trans   &trans
                        >;
                };

                media_layer {
                        bindings = <
   &kp LGUI     &kp LALT        &kp LSHFT       &kp LCTRL       &none           &none   &bt BT_SEL 0            &bt BT_SEL 1            &bt BT_SEL 2            &bt BT_CLR
   &none        &none           &none           &none           &none           &none   &kp C_PREV              &kp C_PLAY              &kp C_NEXT              &none
   &none        &none           &none           &none           &none           &none   &kp C_VOL_DN            &kp C_MUTE              &kp C_VOL_UP            &none
                                                        &trans    &trans    &trans   &trans   &trans   &trans
                        >;
                };

                navigation_layer {
                        bindings = <
   &kp LGUI     &kp LALT        &kp LSHFT       &kp LCTRL       &none           &none           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP    &mmv MOVE_RIGHT
   &none        &none           &none           &none           &none           &caps_word      &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT
   &none        &none           &none           &none           &none           &none           &kp HOME        &kp PG_DN       &kp PG_UP       &kp END
                                                        &trans    &trans    &trans   &mkp MCLK   &mkp LCLK   &mkp RCLK
                        >;
                };
        };
};
